/* REXX */
/**********************************************************************/
/* this routine gets system information - version 1.0                 */
/**********************************************************************/
/*------------------ initialize global variables ---------------------*/
trace 0
address tso                                    /* set mode            */
numeric digits 30                              /* set decimal size    */
cvt = c2d(storage(10,4))                       /* point to cvt        */
ecvt = c2d(storage(d2x(cvt+140),4))            /* point to cvtecvt    */
sysn = mvsvar('SYSNAME')                       /* get sysname         */
red   = '01'x                                  /* set colour          */
blue  = '02'x                                  /* attributes fo the   */
green = '03'x                                  /* dynamic display     */
white = '04'x                                  /* area                */
turq  = '05'x                                  /*                     */
pink  = '06'x                                  /*                     */
yellow = '07'x                                 /*                     */
title = ' System Information for 'sysn         /* set display title   */
/*---------------- get IPL time --------------------------------------*/
cvtsmca = c2d(storage(d2x(cvt+196),4))         /* point to cvtsmca    */
ipltime = c2d(storage(d2x(cvtsmca+336),4))     /* point to smcaitme   */
/* ------- convert time from hundreds of seconds to hh:mm:ss -------- */
ipltime = ipltime%100                          /* remove 100's        */
iplhrs = ipltime%3600                          /* calculate hours     */
iplhrs = right(iplhrs,2,'0')                   /* add leading zero    */
ipltime = ipltime//3600                        /* calculate minutes   */
iplmin = ipltime%60                            /* decimal convertion  */
iplmin = right(iplmin,2,'0')                   /* add leading zero    */
iplsec = ipltime//60                           /* calculate seconds   */
iplsec = right(iplsec,2,'0')                   /* add leading zero    */
ipltime= iplhrs':'iplmin':'iplsec              /* build string        */
/* ------- convert julian days to day of the week ------------------- */
ipldate = c2x(storage(d2x(cvtsmca+340),4))     /* point to smcaidte   */
parse var ipldate . 3 yy 5 ddd 8 .             /* strip out year, day */
juldate = yy||ddd                              /* build julain date   */
ipldate = date(,''juldate'','j')               /* Get the date        */
iplday  = date(w,''juldate'','j')              /* Get the day         */
/*---------------- get IPL info --------------------------------------*/
ihaipa = c2d(storage(d2x(ecvt+392),4))         /* point to ecvtipa    */
ipll = storage(d2x(ihaipa+16),8)               /* ipl load parameters */
hcdu = storage(d2x(ihaipa+16),4)               /* hcd unit address    */
hcdm = storage(d2x(ihaipa+20),2)               /* hcd load member     */
lpar = storage(d2x(ihaipa+32),8)               /* lpar name           */
ipld = strip(storage(d2x(ihaipa+48),44))       /* ipl parm DSN        */
iplu = storage(d2x(ihaipa+92),4)               /* ipl load parm addr. */
hcds = storage(d2x(ihaipa+96),2)               /* iodf suffix         */
hcdq = storage(d2x(ihaipa+99),8)               /* hcd hi-level qual.  */
syssf = strip(storage(d2x(ihaipa+160),2))      /* ieasysxx suffixes   */
mvol = storage(d2x(ihaipa+224),6)              /* mcat volser         */
mcat = storage(d2x(ihaipa+234),44)             /* master catalog name */
symsf = strip(storage(d2x(ihaipa+288),63))     /* ieasymxx suffixes   */
pdsn = strip(storage(d2x(ihaipa+416),44))      /* parmlib dsn         */
pvol = storage(d2x(ihaipa+461),6)              /* parmlib volser      */
ipln = ipld'(LOAD'hcdm')'                      /* build iplparm dsn   */
/*---------------- get IODF DSN --------------------------------------*/
cvtixavl = c2d(storage(d2x(cvt+124),4))        /* point to cvtixavl   */
iociovtp = c2d(storage(d2x(cvtixavl+208),4))   /* point to iociovtp   */
hcdn   = strip(storage(d2x(iociovtp+288),15))  /* point to iodf name  */
cda      = c2d(storage(d2x(iociovtp+24),4))    /* point to cda        */
hcdn     = strip(storage(d2x(cda+32),15))      /* point to iodf name  */
configid = storage(d2x(cda+92),8)              /* point to config     */
edt      = storage(d2x(cda+104),2)             /* point to edt        */
/*--------------------- get the sysres volser ------------------------*/
ucb    = c2d(storage(d2x(cvt+48),4))           /* point to cvtsmca    */
sysres = storage(d2x(ucb+28),6)                /* sysres volume       */
sysrs2 = mvsvar('symdef','sysr2')              /* get second sysres   */

if sysrs2 = '' then sysrs2 = '-none-'          /* no second sysres    */

/*---------------- get the unit address ------------------------------*/
saddr = getucb(sysres)                         /* sysres device no.   */

if sysrs2 Â¬= '-none-' then saddr2 = getucb(sysrs2) /* no second sysres*/

paddr = getucb(pvol)                           /* parmlib device no.  */
maddr = getucb(mvol)                           /* mcat   device no.   */

/*----------------------- get the volser -----------------------------*/
iplv = getvol(iplu)                            /* iplparm volser      */
hcdv = getvol(hcdu)                            /* iodf volser         */
/*---------------- get numbers of cpu's ------------------------------*/
cvtscpin = c2d(storage(d2x(cvt+832),4))        /* point to cvtscpin   */
cpuno = c2d(storage(d2x(cvtscpin+16),2))       /*  get no. of cpu's   */
/*---------------- get cpu info --------------------------------------*/
cvthid = c2d(storage(d2x(cvt+1068),4))         /* point to cvthid     */
cputype = strip(storage(d2x(cvthid+28),4))     /* get cpu type        */
cpumod = strip(storage(d2x(cvthid+32),3))      /* get cpu model       */
cpu = cputype'-'cpumod
/*---------------- get storage values --------------------------------*/
cvtrlstg = c2d(storage(d2x(cvt+856),4))        /* point to cvtrlstg   */
realm  = cvtrlstg/1024                         /* convert to MB.      */
cvtrcep = c2d(storage(d2x(cvt+1168),4))        /* point to cvtrcep    */
xpand  = c2d(storage(d2x(cvtrcep+160),4))      /* no. expanded stor.  */
xpand  = xpand*4/1024                          /* convert to MB.      */
/*---------------- set up cpu display fields -------------------------*/
x = syscpus('cpuid.')

do cntr = 1 to cpuid.0                         /* pack cpu id. into   */
  temp_var_name = 'cpu'||cntr                  /* display string      */
  interpret temp_var_name '= substr(cpuid.cntr,3,6)'
end

/*----------------------- display the information --------------------*/
address ispexec                                /* set mode            */
"addpop row(2) column(2)"                      /* start window        */

do until rc > 0
  "display panel(checkstm)"                    /* display results     */
end

"rempop"                                       /* stop window         */
address tso                                    /* set mode            */

exit
/*--------------------- get device number from UCB -------------------*/
getucb: procedure expose vol dnum
arg vol                                        /* get volume name     */
dnum = '0000'                                  /* initilaize device   */
address LINKPGM "GETUADDR vol dnum"            /* call program        */
return dnum
/*--------------------- get volser from UCB --------------------------*/
getvol: procedure expose vol dnum
arg dnum                                       /* get device address  */
vol= 'XXXXXX'                                  /* initilaize volser   */
address LINKPGM "GETUADDR vol dnum"            /* call program        */
return vol
