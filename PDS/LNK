/* REXX */
/**********************************************************************/
/* this routine gets the current linklist - Version 1.0               */
/**********************************************************************/
/*------------------ initialize global variables ---------------------*/
trace 0
address tso                                    /* set mode            */
numeric digits 30                              /* set decimal size    */
red   = '01'x
blue  = '02'x
green = '03'x
white = '04'x
turq  = '05'x
pink  = '06'x
yellow = '07'x
sysn = mvsvar('SYSNAME')                       /* get sysname         */
cur_line = 1                                   /* first row           */
csrpos  = 1                                    /* first character     */
poppos  = 6                                    /* start pos. for pop  */
scrn_wdth = 56                                 /* set screen width    */
/*------------------ get linklist data -------------------------------*/
cvt = c2d(storage(10,4))                       /* point to cvt        */
ecvt = c2d(storage(d2x(cvt+140),4))            /* point to cvtecvt    */
ascb = c2d(storage(224,4))                     /* point to ascb       */
assb = c2d(storage(d2x(ascb+336),4))           /* point to assb       */
dlcb = c2d(storage(d2x(assb+236),4))           /* point to dlcb       */
lnkname = strip(storage(d2x(dlcb+36),16),t)    /* lnklst set name     */
cvtllta = c2d(storage(d2x(dlcb+16),4))         /* point to cvtllta    */
lltx = c2d(storage(d2x(dlcb+20),4))            /* point to lltx       */
maxlines = c2d(storage(d2x(cvtllta+4),4))      /* number of entry     */
lltapftb = cvtllta + 8 + (maxlines * 45)       /* first entry         */
lnkoff = 8                                     /* offset for dsn      */
voloff = 8                                     /* offset for vol      */
apfoff = 0                                     /* offset for apf      */

do inc = 1 to maxlines
  len = c2d(storage(d2x(cvtllta+lnkoff),1))    /* length of entry     */
  lnkdsn = storage(d2x(cvtllta+lnkoff+1),len)  /* get the dsn         */
  lnkvol = storage(d2x(lltx+voloff),6)         /* get the volser      */
  apflag = storage(d2x(lltapftb+apfoff),1)     /* check apf flag      */
  if bitand(apflag,'80'x) = '80'x then dsnapf = 'Y' /* apf flag on    */
  else dsnapf = ' '                            /* apf flag off        */
  lnkoff = lnkoff + 45                         /* incr. lnkoff        */
  voloff = voloff + 8                          /* incr. voloff        */
  apfoff = apfoff + 1                          /* incr. apfoff        */
  line.inc = green||left(lnkdsn,45)||blue||left(lnkvol||' ',
             ||red||dsnapf,9)
end

/*------------------ display the linklist ----------------------------*/
title = maxlines' LinkList Datasets in 'lnkname' for 'sysn
srchfor = ''                                   /* initialize display  */
dyndata = ''                                   /* initialize display  */

do inc = 1 to maxlines                         /* for each line       */
  dyndata = dyndata||line.inc                  /* build output line   */
end

dyndata = dyndata||blue||centre(white||'BOTTOM'||blue,scrn_wdth-1,'*')

address ispexec                                /* set mode            */
"vget zpf05 profile"                           /* get PF5 key         */
zpf05_old = zpf05                              /* save old key        */
zpf05 = 'AGAIN'                                /* set PF5 key         */
"vput zpf05 profile"                           /* store PF5 key       */
cursor = 'cursor()'                            /* set initial value   */
"addpop row(2) column("poppos")"               /* set window          */

do until disprc > 0
  dynarea = substr(dyndata,1+(cur_line-1)*scrn_wdth) /* set display   */
  "display panel(checklnk)" cursor             /* display result      */
  disprc = rc
  "vget (zverb,zscrolla,zscrolln)"             /* get ispf values     */
  select
    when zverb = 'UP' then
      do
        if zscrolla = 'MAX' then cur_line = 1  /* move to top         */
        else cur_line = max(1,cur_line-zscrolln) /* up x lines        */
      end
    when zverb = 'DOWN' then
      do
        if zscrolla = 'MAX' then cur_line = maxlines  /* move to bot. */
        else cur_line = min(maxlines,cur_line+zscrolln) /*down x lines*/
      end
    when zcmd = 'AGAIN' & srchfor <> '' then   /* PF5 pressed         */
      do
        from_here = start_pos                  /* get search string   */
        start_pos = pos(srchfor,dyndata,from_here+1) /* search again  */
        if start_pos <> 0 then call get_position /* if found, display */
        else call not_found                    /* reset cursor        */
      end
    when substr(zcmd,1,1) = 'F' then           /* find a string?      */
      do
        parse var zcmd . srchfor               /* get search string   */
        start_pos = pos(srchfor,dyndata)       /* search for string   */
        if start_pos <> 0 then call get_position /* if found, display */
        else call not_found                    /* reset cursor        */
      end
    otherwise
  end
end

"rempop"                                       /* close window        */
zpf05 = zpf05_old                              /* reset pf key        */
"vput zpf05 profile"                           /* store PF5 key       */
address tso                                    /* set mode            */

exit
/*------------------ calculate line position in dynamic area ---------*/
get_position:
cur_line = start_pos%scrn_wdth+1               /* get row position    */
csrpos = start_pos//scrn_wdth                  /* get column position */
cursor = 'cursor(dynarea)'                     /* set cursor field    */

return
/*------------------ calculate line position in dynamic area ---------*/
not_found:
cur_line = 1                                   /* set row position    */
csrpos  = 1                                    /* set column position */
cursor = 'cursor()'                            /* set cursor field    */

return
