/* REXX */
/**********************************************************************/
/* this routine display the storage map - version 1.0                 */
/**********************************************************************/
/*------------------ initialize global variables ---------------------*/
trace 0
address tso                                    /* set mode            */
numeric digits 30                              /* set decimal size    */
sysn = mvsvar('SYSNAME')                       /* get sysname         */
red   = '01'x                                  /* set colour          */
blue  = '02'x                                  /* attributes fo the   */
green = '03'x                                  /* dynamic display     */
white = '04'x                                  /* area                */
turq  = '05'x                                  /*                     */
pink  = '06'x                                  /*                     */
yellow = '07'x                                 /*                     */
title = ' Storage Map for 'sysn                /* set display title   */
/*---------------- default values ------------------------------------*/
psas = 0                                       /* start of psa        */
psae = FFF                                     /* end of psa          */
psak = 4                                       /* size of psa         */
syss = 1000                                    /* start of system     */
syse = 4FFF                                    /* end of system       */
sysk = 16                                      /* size of system      */
privs = 5000                                   /* start of private    */
gblrs = 5000                                   /* start of real priv. */
nucoe = FFFFFF                                 /* end of R/O nuc.     */
enucos = 1000000                               /* start of ext. nuc.  */
megabyte = 1024*1000
/*---------------- get storage use details ---------------------------*/
cvt = c2d(storage(10,4))                       /* point to cvt        */
ecvt = c2d(storage(d2x(cvt+140),4))            /* point to cvtecvt    */
cvtgda = c2d(storage(d2x(cvt+560),4))          /* point to cvtgda     */
csa   = c2d(storage(d2x(cvtgda+112),4))        /* csa region size     */
csaf  = format((csa/megabyte),,2)              /* convert to Megs.    */
ecsa  = c2d(storage(d2x(cvtgda+128),4))        /* ex. csa size        */
ecsaf = format((ecsa/megabyte),,2)             /* convert to Megs.    */
sqa   = c2d(storage(d2x(cvtgda+148),4))        /* sqa region size     */
sqaf  = format((sqa/megabyte),,2)              /* convert to Megs.    */
esqa  = c2d(storage(d2x(cvtgda+156),4))        /* ex. sqa size        */
esqaf = format((esqa/megabyte),,2)             /* convert to Megs.    */
priv  = c2d(storage(d2x(cvtgda+164),4))        /* private region size */
privf = format((priv/megabyte),,2)             /* convert to Megs.    */
eprv  = c2d(storage(d2x(cvtgda+172),4))        /* ex. private size    */
eprvf = format((eprv/megabyte),,2)             /* convert to Megs.    */
csau  = c2d(storage(d2x(cvtgda+432),4))        /* csa used            */
csauf = format((csau/csa*100),,1)'%'           /* convert to Percent  */
ecsau = c2d(storage(d2x(cvtgda+436),4))        /* ecsa used           */
ecsauf = format((ecsau/ecsa*100),,1)'%'        /* convert to Percent  */
sqau  = c2d(storage(d2x(cvtgda+440),4))        /* sqa used            */
sqauf = format((sqau/sqa*100),,1)'%'           /* convert to Percent  */
esqau = c2d(storage(d2x(cvtgda+444),4))        /* esqa used           */
esqauf = format((esqau/esqa*100),,1)'%'        /* convert to Percent  */
csao  = c2d(storage(d2x(cvtgda+448),4))        /* csa overflow        */
csaof = format((csao/megabyte),,2)             /* convert to Megs.    */
ecsao = c2d(storage(d2x(cvtgda+452),4))        /* ecsa overflow       */
ecsaof = format((ecsao/megabyte),,2)           /* convert to Megs.    */
/*---------------- get storage allocation ----------------------------*/
cvtgda = c2d(storage(d2x(cvt+560),4))          /* point to cvtgda     */
csas  = strip(c2x(storage(d2x(cvtgda+108),4)),'l',0) /* start of csa  */
csa   = strip(c2x(storage(d2x(cvtgda+112),4)),'l',0) /* csa size      */
csak  = x2d(csa)/1024                                /* convert to K. */
csae  = d2x(x2d(csa)+x2d(csas)-1)                    /* end of csa    */
ecsas = strip(c2x(storage(d2x(cvtgda+124),4)),'l',0) /* start of ecsa */
ecsa  = strip(c2x(storage(d2x(cvtgda+128),4)),'l',0) /* ex. csa size  */
ecsak = x2d(ecsa)/1024                               /* convert to K. */
ecsae = d2x(x2d(ecsa)+x2d(ecsas)-1)                  /* end of ecsa   */
sqas  = strip(c2x(storage(d2x(cvtgda+144),4)),'l',0) /* start of sqa  */
sqa   = strip(c2x(storage(d2x(cvtgda+148),4)),'l',0) /* sqa size *    */
sqak  = x2d(sqa)/1024                                /* convert to K. */
sqae  = d2x(x2d(sqa)+x2d(sqas)-1)                    /* end of sqa    */
esqas = strip(c2x(storage(d2x(cvtgda+152),4)),'l',0) /* start of esqa */
esqa  = strip(c2x(storage(d2x(cvtgda+156),4)),'l',0) /* ex. esqa size */
esqak = x2d(esqa)/1024                               /* convert to K. */
esqae = d2x(x2d(esqa)+x2d(esqas)-1)                  /* end of esqa   */
priv  = strip(c2x(storage(d2x(cvtgda+164),4)),'l',0) /* priv.  size   */
privk = x2d(priv)/1024                               /* convert to K. */
prive = d2x(20480+((privk-20)*1024)-1)               /* end of priv.  */
eprvs = strip(c2x(storage(d2x(cvtgda+168),4)),'l',0) /* start of eprv.*/
eprv  = strip(c2x(storage(d2x(cvtgda+172),4)),'l',0) /* epriv. size   */
eprvk = x2d(eprv)/1024                               /* convert to K. */
eprve = d2x(x2d(eprv)+x2d(eprvs)-1)                  /* end of epriv. */
gblr  = strip(c2x(storage(d2x(cvtgda+196),4)),'l',0) /* size v=r gbl. */
gblrk = x2d(gblr)/1024                               /* convert to K. */
gblre = d2x(20480+x2d(gblr)-1)                       /* end of global */
cvtsmext = c2d(storage(d2x(cvt+1196),4))           /* pnt to cvtsmext */
mlpas  = strip(c2x(storage(d2x(cvtsmext+8),4)),'l',0) /*start of mlpa */

if mlpas <> 0 then                             /* mlpa in use         */
  do
    mlpae = strip(c2x(storage(d2x(cvtsmext+12),4)),'l',0)
    mlpak = (x2d(mlpae)-x2d(mlpas)+1)/1024     /* calc and convert    */
  end
else                                           /* no mlpa             */
  do
    mplas = '  n/a   '
    mlpae = '  n/a   '
    mlpak = 0
  end

flpas = strip(c2x(storage(d2x(cvtsmext+16),4)),'l',0) /*start of flpa */

if flpas <> 0 then                             /* flpa in use         */
  do
    flpae = strip(c2x(storage(d2x(cvtsmext+20),4)),'l',0)
    flpak = (x2d(flpae)-x2d(flpas)+1)/1024     /* calc and convert    */
  end
else                                           /* no flpa             */
  do
    fplas = '  n/a   '
    flpae = '  n/a   '
    flpak = 0
  end

plpas = strip(c2x(storage(d2x(cvtsmext+24),4)),'l',0) /*start of plpa */
plpae = strip(c2x(storage(d2x(cvtsmext+28),4)),'l',0) /* end of plpa  */
plpak = (x2d(plpae)-x2d(plpas)+1)/1024               /* calc and conv */
nucws = strip(c2x(storage(d2x(cvtsmext+32),4)),'l',0) /* start of r/w */
nucwe = strip(c2x(storage(d2x(cvtsmext+36),4)),'l',0) /* end of r/w   */
nucwk = (x2d(nucwe)-x2d(nucws)+1)/1024               /* calc and conv */
nucwk = format(nucwk,,0)                             /* tidy up size  */
nucos = strip(c2x(storage(d2x(cvtsmext+40),4)),'l',0) /*start of flpa */
nucok = (x2d('ffffff')-x2d(nucos)+1)/1024            /* calc and conv */
enucoe = strip(c2x(storage(d2x(cvtsmext+44),4)),'l',0) /* end of r/o  */
enucok = X2d(enucoe)-X2d('1000000')+1                /* calc and conv */
enucok = Format(enucok/1024,,0)                      /* tidy up size  */
enucws = strip(c2x(storage(d2x(cvtsmext+48),4)),'l',0) /* str e-r/w   */
enucwe = strip(c2x(storage(d2x(cvtsmext+52),4)),'l',0) /* end e-r/w   */
enucwk = (x2d(enucwe)-x2d(enucws)+1)/1024            /* calc and conv */
enucwk = format(enucwk,,0)                           /* tidy up size  */
eplpas = strip(c2x(storage(d2x(cvtsmext+56),4)),'l',0) /*str of eplpa */
eplpae = strip(c2x(storage(d2x(cvtsmext+60),4)),'l',0) /*end of eplpa */
eplpak = (x2d(eplpae)-x2d(eplpas)+1)/1024            /* calc and conv */
eflpas = strip(c2x(storage(d2x(cvtsmext+64),4)),'l',0) /*str of eflpa */

if eflpas <> 0 then                            /* ext. flpa in use    */
  do
    eflpae = strip(c2x(storage(d2x(cvtsmext+68),4)),'l',0)
    eflpak = (x2d(eflpae)-x2d(eflpas)+1)/1024  /* calc and convert    */
  end
else                                           /* no ext. flpa        */
  do
    efplas = '  n/a   '
    eflpae = '  n/a   '
    eflpak = 0
  end

emlpas = strip(c2x(storage(d2x(cvtsmext+72),4)),'l',0) /* str emlpa   */

if emlpas <> 0 then                            /* ext. mlpa in use    */
  do
    emlpae = strip(c2x(storage(d2x(cvtsmext+76),4)),'l',0)
    emlpak = (x2d(emlpae)-x2d(emlpas)+1)/1024  /* calc and convert    */
  end
else                                           /* no ext. mlpa        */
  do
    emplas = '  n/a   '
    emlpae = '  n/a   '
    emlpak = 0
  end

/*----------------------- display the information --------------------*/
address ispexec                                /* set mode            */
"addpop row(2) column(10)"                     /* start window        */

do until rc > 0
  "display panel(checkmap)"                    /* display results     */
end

"rempop"                                       /* stop window         */
address tso                                    /* set mode            */

exit
